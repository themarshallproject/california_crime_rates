dim(nyc)
plot(miami$year,nyc$violent_per_100k,xlab="Year",ylab="Violent Crimes per 100K People",type="l",main="Crime Rate in NYC")
points(nyc$year,alburqueue$violent_per_100k,pch=19,cex=0.5)
points(nyc$year,nyc$violent_per_100k,pch=19,cex=0.5)
options(repr.plot.width=8,repr.plot.height=4)
plot(miami$year,nyc$violent_per_100k,xlab="Year",ylab="Violent Crimes per 100K People",type="l",main="Crime Rate in NYC")
points(nyc$year,nyc$violent_per_100k,pch=19,cex=0.5)
model = lm(violent_per_100k~year,data=miami)
plot(violent_per_100k~year,data=miami,xlab="Year",ylab="Violent Crimes per 100K People",type="l",main="Crime Rate in Miami",col="grey")
points(violent_per_100k~year,data=miami,pch=19,cex=0.5,col="grey")
abline(model)
plot(violent_per_100k~year,data=miami,xlab="Year",ylab="Violent Crimes per 100K People",type="l",main="Crime Rate in Miami",col="grey")
points(violent_per_100k~year,data=miami,pch=19,cex=0.5,col="grey")
abline(model)
help(loess)
model = loess(violent_per_100k~year,data=miami)
miami$trend = predict(model)
plot(trend~year,data=miami,type="l")
model = loess(violent_per_100k~year,data=miami,span=0.7)
miami$trend = fitted(model)
plot(violent_per_100k~year,data=miami,xlab="Year",ylab="Violent Crimes per 100K People",type="l",main="Crime Rate in Miami",col="grey")
points(violent_per_100k~year,data=miami,pch=19,cex=0.5,col="grey")
lines(trend~year,data=miami)
library(dplyr)
install.packages("dplyr")
library("dplyr", lib.loc="~/Library/R/3.2/library")
library(dplyr)
ucr <- read.csv('http://compute-cuj.org/ucr_crime_1975_2015.csv', as.is = TRUE)
str(ucr)
filter(ucr, ucr$department_name == "Miami")
str(filter(ucr, ucr$department_name == "Miami"))
filter(ucr, department_name == 'Miami', year == '1982')
filter(ucr, department_name == 'New York City', year >= '1972', year <= '2000')
filter(ucr, department_name == 'New York City', year %in% c('1972', '2000'))
filter(ucr, department_name %in% c('New York City','Boston'), year == '1972')
filter(ucr, department_name %in% c('New York City','Boston'), year == '1976')
filter(ucr, department_name == "Atlanta", year %in% c'1975', '2015')
filter(ucr, department_name == "Atlanta", year %in% c('1975', '2015'))
filter(ucr, department_name == "Atlanta", year %in% c('1975', '2015'))
miami2015pop <- filter(ucr, department_name == 'Miami', year == '2015')
miami2015pop <- miami2015pop$total_pop
miami2015pop
filter(ucr, tota_pop > miami2015pop)
filter(ucr, total_pop > miami2015pop)
filter(ucr, ucr$violent_per_100k > 1e5)
filter(ucr, ucr$violent_per_100k > 4e3)
select(miami, year, total_pop)
bitCities <- select(ucr, department_name, total_pop)
arrange(bigCities, total_pop)
bigCities <- select(ucr, department_name, total_pop)
arrange(bigCities, total_pop)
bigCities <- select(ucr, department_name, total_pop, year =='2015')
bigCities <- select(filter(ucr, year =='2015'), department_name, total_pop)
arrange(bigCities, total_pop)
arrange(bigCities, total_pop,descending = TRUE)
help(arrange)
arrange(bigCities, total_pop, desc = TRUE)
arrange(bigCities, desc(total_pop))
# Create a data set of cities w/populations larger than 3M; sort them by population & year.
select(filter(ucr, total_pop > 3e6), department_name, total_pop, year)
arrange(bigCities, desc(department_name), desc(year))
bigCities <- select(filter(ucr, total_pop > 3e6), department_name, total_pop, year)
arrange(bigCities, desc(department_name), desc(year))
arrange(bigCities, desc(total_pop), desc(year))
# nyc
nyc
nyc <- filter(urc, department_name == 'New York City')
str(nyc)
str(nyc)
summarise(nyc, sum(homs_sum))
sum(nyc$homs_sum)
summarise(nyc, sum(homs_sum))
sum(nyc$homs_sum)
sum(nyc$homs_sum)
sum(nyc$rob_sum)
summarise(nyc, sum(homs_sum), sum(rob_sum))
max(nyc$year)
min(nyc$year)
sum(nyc$homs_sum)
sum(nyc$rob_sum)
summarise(nyc, Total_Homicides_1975_2015 = sum(homs_sum), Total_Robberies_1975_2015 = sum(rob_sum))
sum(nyc$homs_sum)
sum(nyc$rob_sum)
summarise(nyc, NYC_Tot_Hom_1975_2015 = sum(homs_sum), NYC_Tot_Robb_1975_2015 = sum(rob_sum))
cities <- group_by(ucr, department_name)
cities
dim(ucr)
dim(cities)
head(ucr)
head(cities)
cities <- group_by(ucr, department_name)
summarise(cities, sum(homs_sum), sum(rob_sum))
sum(filter(ucr, department_name == 'Baltimore'), homs_sum )
sum(filter(ucr, department_name == 'Baltimore')$homs_sum )
summarise(nyc, NYC_Tot_Hom_1975_2015 = sum(homs_sum), NYC_Tot_Robb_1975_2015 = sum(rob_sum))
summarise(cities, sum(homs_sum), sum(rob_sum))
sum(filter(ucr, department_name == 'New York City')$homs_sum )
boston <- filter(urc, department_name == 'Boston')
boston <- filter(ucr, department_name == 'Boston')
sum(boston$homs_sum)
sum(boston$rob_sum)
summarise(boston, Boston_Tot_Hom_1975_2015 = sum(homs_sum), Boston_Tot_Robb_1975_2015 = sum(rob_sum))
cities <- group_by(ucr, department_name)
summarise(cities, sum(homs_sum), sum(rob_sum))
names(cities)
summarise(cities, minv = min(violent_per_100k), maxv = max(violent_per_100k))
library('dplyr')
library('tidyr')
install.packages("tidyr")
library('tidyr')
library('foreign')
library('ggplot2')
library('stringr')
library('readxl')
install.packages('readxl')
library('readxl')
library('scales')
source("~/dev/tmp_r_theme/theme.r")
time.served <- read_excel('data/Time Served Trends.xlsx')
time.served <- read_excel('/Users/Man/Documents/GitHub/201707_timeserved/data/Time Served Trends.xlsx')
time.served
time.served <- time.served[-c(1),]
time.served
time.served[-c(577,578,579,580,581),]
time.served[c(577,578,579,580,581),]
time.served <- read_excel('/Users/Man/Documents/GitHub/201707_timeserved/data/Time Served Trends.xlsx')
time.served <- time.served[-c(1),]
time.served <- time.served[-c(577,578,579,580,581),]
time.served
colnames(time.served) <- make.names(colnames(time.served))
time.served
firsts<-time.served %>%
#    select(STATE, YEAR, MEAN.TIME.SERVED..YEARS.) %>%
select(STATE, YEAR, X__3) %>%
filter(YEAR>1999) %>%
group_by(STATE) %>%
top_n(1, -YEAR) %>%
mutate(YEAR="start") %>%
ungroup
lasts<-time.served %>%
#    select(STATE, YEAR, MEAN.TIME.SERVED..YEARS.) %>%
select(STATE, YEAR, X__3) %>%
group_by(STATE) %>%
top_n(-1, -YEAR) %>%
mutate(YEAR="finish") %>%
ungroup
first.last <- rbind(firsts, lasts) %>%
arrange(STATE, YEAR)
sn.csv <- read.csv("/Users/Man/Documents/Profession/Skills/Lynda/R/Exercise Files/Ch02/02_04/social_network.xlsx", header = T)
str(sn.csv)
str(sn.csv)
sn.csv <- read.csv("/Users/Man/Documents/Profession/Skills/Lynda/R/Exercise Files/Ch02/02_04/social_network.csv", header = T)
str(sn.csv)
browseURL("http://cran.r-project.org/web/views/")
browseURL("http://cran.stat.ucla.edu/web/packages/available_packages_by_name.html")
library()  # Brings up editor list of available packages
library()  # Brings up editor list of available packages
search()  # Shows packages that are currently active
update.packages()
x  # Prints contents of x in console
x <- 0:10  # Assigns number 0 through 10 to x
x  # Prints contents of x in console
x <- 0:10  # Assigns number 0 through 10 to x
x  # Prints contents of x in console
x <- 0:10  # Assigns number 0 through 10 to x
x  # Prints contents of x in console
x <- 0:10  # Assigns number 0 through 10 to x
x  # Prints contents of x in console
y <- c(5, 4, 1, 6, 7, 2, 2, 3, 2, 8)  # Assigns values to y
y  # Prints y to console
ls()  # List objects
sn.csv <- read.csv("C:\Users\Barton Poulson\Desktop\social_network.csv", header = T)
sn.csv <- read.csv("C:/Users/Barton Poulson/Desktop/social_network.csv", header = T)
str(sn.csv)
ls()  # List objects
sn.csv <- read.csv("/Users/Man/Documents/Profession/Skills/Lynda/R/Exercise Files/Ch02/02_04/social_network.csv", header = T)
str(sn.csv)
install.packages("foreign")
library(foreign)
detach("package:foreign", unload=TRUE)
library(foreign)
browseURL("http://cran.r-project.org/web/views/")
browseURL("http://cran.stat.ucla.edu/web/packages/available_packages_by_name.html")
browseURL("http://cran.r-project.org/web/views/")
browseURL("http://cran.stat.ucla.edu/web/packages/available_packages_by_name.html")
library()  # Brings up editor list of available packages
search()  # Shows packages that are currently active
search()
library()
library()
search()
library(psych)
search()
require("psych")
vignette()
vignette(package = 'psych')
browseVignettes( = 'psych')
browseVignettes(package = 'psych')
browseVignettes()
vignette() # Lists all the vignettes available for all packages
update.packages()
detach('package:psych')
library('psych')
detach('package:psych', unload = TRUE)
install.packages(c("gdtools", "httpuv", "lubridate", "MASS", "openssl", "pillar", "rpart", "tidyselect", "yaml"))
nucr <- read.csv('/Users/Man/Google\ Drive/KingsCollege/1_Fall/Data_II/Files_CSV/new_ucr.csv')
str(nucr)
t(nucr)
head(t(nucr))
matplot(1975:2015,t(nucr),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents")
hist(nucr$y1990,main="1990 Violent Crimes",xlab="Violent crimes per 100K people")
hist(nucr$y2015,main="2015 Violent Crimes",xlab="Violent crimes per 100K people")
drops <- mutate(nucr,long=(y2015-y1990)/y1990,short=(y2015-y2010)/y2010)
library(dyplr)
library(dplyr)
drops <- mutate(nucr,long=(y2015-y1990)/y1990,short=(y2015-y2010)/y2010)
drops
str(drops)
View(drops)
matplot(1975:2015,t(nucr),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents")
nucr <- read.csv('/Users/Man/Google\ Drive/KingsCollege/1_Fall/Data_II/Files_CSV/new_ucr.csv')
matplot(1975:2015,t(nucr),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents")
View(nucr)
nucr <- read.csv('/Users/Man/Google\ Drive/KingsCollege/1_Fall/Data_II/Files_CSV/new_ucr.csv')
nucr['Atlanta',]
nucr
nucr['Boston',]
view(nucr['Boston',])
View(nucr['Boston',])
nucr <- read.csv('/Users/Man/Google\ Drive/KingsCollege/1_Fall/Data_II/Files_CSV/new_ucr.csv')
nucr[nucr$City == 'Boston',]
test <- nucr[nucr$City %in% c('Atlanta', 'Boston', 'Houston')]
test
dist(test)
View(dist(test))
dist(nucr)
dist(nucr)
fit = hclust(d,method="ward.D")
d <- dist(nucr)
fit = hclust(d,method="ward.D")
options(repr.plot.width=8,repr.plot.height=6)
plot(fit,cex=0.8)
rect.hclust(fit,k=4,border="red")
cutree(fit,k=4)
groups = cutree(fit,k=4)
matplot(1975:2015,t(nucr[groups==1,]),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents",ylim=c(0,4400))
t(nucr)
matplot(1975:2015,t(nucr[groups==2,]),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents",ylim=c(0,4400))
matplot(c(1,2,3),c(4,5,6))
dim(1975:2015)
lenght(1975:2015)
length(1975:2015)
length(t(nucr[groups==4,]))
t(nucr[groups==4,])
length(t(nucr[groups==4,]))
dim(t(nucr[groups==4,]))
length(1975:2015)
dim(t(nucr[groups==4,]))
1975:2015
dim(t(nucr[groups==1,]))
dim(t(nucr[groups==2,]))
dim(t(nucr[groups==3,]))
dim(t(nucr[groups==4,]))
t(nucr[groups==4,])
dim(t(nucr[groups==4,]))
t(nucr[groups==4,])
nucr <- read.csv('/Users/Man/Google\ Drive/KingsCollege/1_Fall/Data_II/Files_CSV/new_ucr.csv')
d <- dist(nucr)
fit = hclust(d,method="ward.D")
options(repr.plot.width=8,repr.plot.height=6)
plot(fit,cex=0.8)
rect.hclust(fit,k=4,border="red")
groups = cutree(fit,k=4)
matplot(1975:2015,t(nucr[groups==1,]),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents",ylim=c(0,4400))
length(1975:2015)
dim(t(nucr[groups==4,]))
t(nucr[groups==4,])
matplot(1975:2015,t(nucr[groups==4,]),type="l",lty=1,col='grey',xlab="year",ylab="Violent Crime per 100K residents",ylim=c(0,4400))
require(tidyverse) #dplyr, tidyr, readr, ggplot2
require(readxl) # To read .xlsx files
require(zoo) # for na.locf
require(scales)
require(stringr)
require(ggrepel)
require(stats) # For principal component analysis
require(factoextra) # Used to create a ggplot2-based viz of PCA
setwd("~/Documents/GitHub/california_crime_rates")
# Crime
df.crime.california <- read.csv('output_data/crime_rates_1985_2017_doj_ca_state.csv')
df.crime.counties <- read.csv('output_data/crime_rates_1985_2017_doj_ca_counties.csv')
df.crime.agencies <- read.csv('output_data/crime_rates_1985_2017_doj_ca_agencies.csv')
# Personnel
df.personnel.counties <- read.csv('output_data/personnel_rates_LE_&_CJ_2003_2017_by_county.csv')
# San Joaquin
df.crime.joaquin <- filter(df.crime.counties, County == 'San Joaquin County')
df.personnel.joaquin <- filter(df.personnel.counties, county == 'San Joaquin')
# Stockton
df.crime.stockton <- filter(df.crime.agencies, NCICCode == 'Stockton')
df.plot.data <- select(df.crime.joaquin, Year, Homicide_sum, Homicide_rate)
df.plot.data <- select(df.crime.joaquin, Year, Homicide_sum, Homicide_rate)
df.plot.data <- mutate_at(df.plot.data,
vars(starts_with('Homicide')),
funs(pct_chg = ./lag(.,1)-1))
df.plot.data <- filter(df.plot.data, Year > 2000)
filter(select(df.plot.data, Year, Homicide_sum_pct_chg, Homicide_rate_pct_chg), Year == 2011)
df.plot.data <- select(df.crime.joaquin, Year, Homicide_sum, Homicide_rate)
df.plot.data <- mutate_at(df.plot.data,
vars(starts_with('Homicide')),
funs(pct_chg = ./lag(.,1)-1))
df.plot.data <- filter(df.plot.data, Year > 2000)
filter(select(df.plot.data, Year, Homicide_sum_pct_chg, Homicide_rate_pct_chg), Year == 2011)
png('plots/Crime_Sums_2000_2017_Joaquin_homicide.png', height = 600, width = 1200)
ggplot(df.plot.data, aes(x = Year, y = Homicide_sum)) +
geom_line() +
geom_point() +
# Font size
theme(text=element_text(size=20)) +
# Labels
geom_text(aes(label = comma(round(Homicide_sum))),
size = 4, vjust = -2) +
labs(title = 'Homicides - San Joaquin',
caption = 'Source: CA DOJ',
x = 'Year',
y = 'Number of Homicides') +
scale_y_continuous(labels = scales::comma) +
# Background
theme(panel.background = element_rect(colour = 'white', fill = 'white'),
panel.grid.major = element_line(colour = 'gray91')) +
coord_cartesian(ylim = c(0.95*min(df.plot.data$Homicide_sum),
1.05*max(df.plot.data$Homicide_sum)))
dev.off()
df.plot.data <- select(df.crime.joaquin, Year, Homicide_sum, Homicide_rate)
df.plot.data <- mutate_at(df.plot.data,
vars(starts_with('Homicide')),
funs(pct_chg = ./lag(.,1)-1))
df.plot.data <- filter(df.plot.data, Year > 2000)
filter(select(df.plot.data, Year, Homicide_sum_pct_chg, Homicide_rate_pct_chg), Year == 2011)
png('plots/Crime_Sums_2000_2017_Joaquin_homicide.png', height = 600, width = 1200)
ggplot(df.plot.data, aes(x = Year, y = Homicide_sum)) +
geom_line() +
geom_point() +
# Font size
theme(text=element_text(size=20)) +
# Labels
geom_text(aes(label = comma(round(Homicide_sum))),
size = 4, vjust = -2) +
labs(title = 'Homicides - San Joaquin',
caption = 'Source: CA DOJ',
x = 'Year',
y = 'Number of Homicides') +
scale_y_continuous(labels = scales::comma) +
# Background
theme(panel.background = element_rect(colour = 'white', fill = 'white'),
panel.grid.major = element_line(colour = 'gray91')) +
coord_cartesian(ylim = c(0.95*min(df.plot.data$Homicide_sum),
1.05*max(df.plot.data$Homicide_sum)))
dev.off()
png('plots/Crime_Rates_2000_2017_Joaquin_homicide.png', height = 600, width = 1200)
ggplot(df.plot.data, aes(x = Year, y = Homicide_rate)) +
geom_line() +
geom_point() +
# Font size
theme(text=element_text(size=20)) +
# Labels
geom_text(aes(label = comma(round(Homicide_rate))),
size = 4, vjust = -2) +
labs(title = 'Homicide Rates - San Joaquin',
caption = 'Source: CA DOJ',
x = 'Year',
y = 'Homicides per 100K') +
scale_y_continuous(labels = scales::comma) +
# Background
theme(panel.background = element_rect(colour = 'white', fill = 'white'),
panel.grid.major = element_line(colour = 'gray91')) +
coord_cartesian(ylim = c(0.95*min(df.plot.data$Homicide_rate),
1.05*max(df.plot.data$Homicide_rate)))
dev.off()
rm(df.plot.data)
df.plot.data <- select(df.personnel.joaquin,
year, cnty.le.sum, prosecution.sum, publicdefense.sum, probationdept.sum)
df.plot.data <- filter(df.plot.data, year <= 2011)
names(df.plot.data) <- c('year', 'law.enforcement', 'prosecution', 'public.defense', 'probation')
df.plot.data <- gather(df.plot.data, 'department', 'total.personnel', -year)
png('plots/Crime_Rates_2003_2011_Joaquin_personnel.png', height = 600, width = 1200)
ggplot(df.plot.data, aes(x = year, y = total.personnel, colour = department)) +
geom_line() +
geom_point() +
# Font size
theme(text=element_text(size=20)) +
# Labels
geom_text(aes(label = comma(round(total.personnel))),
size = 4, vjust = -2) +
labs(title = 'Personnel - San Joaquin',
caption = 'Source: CA DOJ',
x = 'Year',
y = 'Total Employees') +
scale_y_continuous(labels = scales::comma) +
# Background
theme(panel.background = element_rect(colour = 'white', fill = 'white'),
panel.grid.major = element_line(colour = 'gray91')) +
coord_cartesian(ylim = c(0.95*min(df.plot.data$total.personnel),
1.05*max(df.plot.data$total.personnel)))
dev.off()
rm(df.temp)
df.temp1 <- select(df.crime.california, Year, TotalCrime_sum)
df.temp2 <- select(df.crime.joaquin, Year, TotalCrime_sum)
df.temp1 <- mutate(df.temp1, region = 'California')
df.temp2 <- mutate(df.temp2, region = 'San Joaquin')
df.temp <- rbind(df.temp1, df.temp2)
rm(df.temp1, df.temp2)
df.temp <- filter(df.temp, Year %in% c(2011, 2017))
df.temp <- arrange(df.temp, region, Year)
df.temp <- group_by(df.temp, region)
df.temp <- mutate_at(df.temp,
vars(starts_with('TotalCrime')),
funs(pct.chg = ./lag(.,1)-1))
df.temp
rm(df.plot.data)
df.plot.data <- select(df.crime.joaquin, Year, TotalCrime_sum)
png('plots/Crime_Sums_1985_2017_Joaquin_overall.png', height = 600, width = 1200)
ggplot(df.plot.data, aes(x = Year, y = TotalCrime_sum)) +
geom_line() +
geom_point() +
# Font size
theme(text=element_text(size=20)) +
# Labels
geom_text(aes(label = comma(round(TotalCrime_sum))),
size = 4, vjust = -2) +
labs(title = 'Overall Crime - San Joaquin',
caption = 'Source: CA DOJ',
x = 'Year',
y = 'Number of Crimes') +
scale_y_continuous(labels = scales::comma) +
# Background
theme(panel.background = element_rect(colour = 'white', fill = 'white'),
panel.grid.major = element_line(colour = 'gray91')) +
coord_cartesian(ylim = c(0.95*min(df.plot.data$TotalCrime_sum),
1.05*max(df.plot.data$TotalCrime_sum)))
dev.off()
rm(df.temp)
df.temp <- select(df.crime.joaquin, Year, TotalCrime_rate)
df.temp <- filter(df.temp, Year >= 2000)
df.temp <- filter(df.temp, TotalCrime_rate == max(TotalCrime_rate) | TotalCrime_rate == min(TotalCrime_rate))
df.temp <- arrange(df.temp, Year)
df.temp
df.temp <- mutate_at(df.temp,
vars(ends_with('rate')),
funs(pct.chg = ./lag(.,1)-1))
df.temp
rm(df.temp)
df.temp <- filter(df.crime.counties, Year == 2017)
df.temp <- select(df.temp, Year, County, TOTAL_POP, TotalCrime_rate)
head(arrange(df.temp, -TotalCrime_rate)) # Number 6 by total crime rate
rm(df.temp)
df.temp <- select(df.crime.joaquin, Year, TotalCrime_rate, Property_rate, Violent_nr_rate)
df.temp <- filter(df.temp, Year >= 2000)
df.temp <- filter(df.temp, TotalCrime_rate == max(TotalCrime_rate) | TotalCrime_rate == min(TotalCrime_rate))
df.temp <- arrange(df.temp, Year)
df.temp <- mutate_at(df.temp,
vars(ends_with('rate')),
funs(chg = .-lag(.,1)))
df.temp <- select(df.temp, Year, ends_with('chg'))
df.temp <- mutate_at(df.temp,
vars(ends_with('chg')),
funs(contrib = ./TotalCrime_rate_chg))
df.temp
df.temp
rm(df.plot.data)
df.plot.data <- select(df.crime.joaquin, Year, Violent_nr_rate)
df.plot.data <- filter(df.plot.data, Year >= 2010)
png('plots/Crime_Rates_2010_2017_Joaquin_violent.png', height = 600, width = 1200)
ggplot(df.plot.data, aes(x = Year, y = Violent_nr_rate)) +
geom_line() +
geom_point() +
# Font size
theme(text=element_text(size=20)) +
# Labels
geom_text(aes(label = comma(round(Violent_nr_rate))),
size = 4, vjust = -2) +
labs(title = 'Violent Crime Rates - San Joaquin',
caption = 'Source: CA DOJ',
x = 'Year',
y = 'Crimes per 100K People') +
scale_y_continuous(labels = scales::comma) +
# Background
theme(panel.background = element_rect(colour = 'white', fill = 'white'),
panel.grid.major = element_line(colour = 'gray91')) +
coord_cartesian(ylim = c(0.95*min(df.plot.data$Violent_nr_rate),
1.05*max(df.plot.data$Violent_nr_rate)))
dev.off()
rm(df.temp)
df.temp <- select(df.crime.joaquin, Year, Homicide_sum, Homicide_rate)
df.temp <- mutate_at(df.temp,
vars(starts_with('Homicide')),
funs(pct_chg = ./lag(.,1)-1))
df.temp <- filter(df.temp, Year == 2013)
df.temp
rm(df.temp)
df.temp <- select(df.crime.joaquin, Year, Homicide_sum, Homicide_rate)
df.temp <- mutate_at(df.temp,
vars(starts_with('Homicide')),
funs(pct_chg = ./lag(.,1)-1))
df.temp <- filter(df.temp, Year == 2013)
df.temp
rm(df.temp)
df.temp <- select(df.personnel.joaquin, year, cnty.le.sum)
df.temp <- filter(df.temp, year %in% c(2011, 2017))
df.temp <- arrange(df.temp, year)
df.temp <- mutate_at(df.temp,
vars(ends_with('sum')),
funs(chg = . - lag(.,1)))
df.temp
